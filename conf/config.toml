# 数据流向: monitor -(data)-> outputer -(data)-> decorator

# 标注了'FIXME'的是必须赋值的参数
# 标注了'CHANGED'的是可能需要修改的参数
# 标注了'NOTE'的是也许使用默认值即可的参数


[app]                                       # 程序配置: 程序本身信息
name = 'SystemMonitor'                      # NOTE: 程序名
version = 'v0.2.1'                          # NOTE: 程序版本


[monitor]                                   # 监视器配置: 进行系统参数监视
switch = true                               # NOTE: 监视器开关
interval = 5                                # CHANGED: 监视器运行周期（秒）
    [monitor.innate]                        # 固有条目配置
    id = 'Test-ID'                          # CHANGED: 监视对象ID
        [monitor.innate.key]                # 固有条目的key名
        timestamp = 'timestamp'             # CHANGED: 时间戳条目的key
        id = 'deviceid'                     # CHANGED: 监视对象ID条目的key
    [monitor.custom]                        # 自定义信息配置
    name = 'Test-Name'                      # CHANGED: 监视对象名
    [monitor.cpu]                           # CPU监视器配置
    interval = 0                            # NOTE: 以interval前后的CPU时间为基准进行比较，为0则以上次调用以来的CPU时间为基准
    percpu = false                          # NOTE: 为true则返回每个CPU利用率的列表，为false则返回CPU总利用率
    [monitor.mem]                           # 内存监视器配置
    unit = 'GB'                             # NOTE: 单位，'KB', 'MB'或'GB'
    digit = 1                               # NOTE: 最终结果精确度
    [monitor.swap]                          # 交换分区监视器配置
    unit = 'GB'                             # NOTE: 单位，'KB', 'MB'或'GB'
    digit = 1                               # NOTE: 最终结果精确度
    [monitor.disk]                          # 磁盘监视器配置
    path = '/'                              # NOTE: 要监控的磁盘的挂载点
    unit = 'GB'                             # NOTE: 单位，'KB', 'MB'或'GB'
    digit = 1                               # NOTE: 最终结果精确度
    [monitor.nic]                           # 网卡监视器配置
    wan = 'eth0'                            # CHANGED: WAN网卡的接口名
    lan = 'eth1'                            # CHANGED: LAN网卡的接口名
    [monitor.process]                       # 进程监视器配置
    names = ['python']                      # CHANGED: 需要监视的进程名列表
    keywords = ['main', 'monitor']          # CHANGED: 需要监视的进程的命令行关键字列表


[outputer]                                  # 数据输出器配置: 决定数据输出格式和目标（该目标起中间缓存作用）
switch = true                               # NOTE: 数据输出器开关
format = 'console'                          # CHANGED: 'console'/'mqtt' -- 数据格式化目标，在plugins中实现
selector = 'console'                        # CHANGED: 'console'/'mqtt' -- 数据输出选择器，和format组合可以将不同格式的数据输出到不同位置
    [outputer.console]                      # 数据输出器之一
    [outputer.mqtt]                         # 数据输出器之二
    host = '127.0.0.1'                      # CHANGED: MQTT broker服务地址
    port = 1883                             # NOTE: MQTT broker服务地址
    username = ''                           # CHANGED: 用户名，mqtt允许匿名则留空
    password = ''                           # CHANGED: 密码，mqtt允许匿名则留空
    clientid = 'Test'                       # CHANGED: 客户端ID，为空则使用随机值
    clean = false                           # NOTE: 是否清除连接会话，当clientid值为None、空字符串或随机值时必须为true
    topics = ['monitor']                    # FIXME: 发布/订阅的主题列表
    qos = 1                                 # NOTE: 服务质量，可选值为：0, 1, 2
    keepalive = 60                          # NOTE: 心跳包发送时间间隔

[decorator]                                 # 数据装饰器配置: 用于为数据持久化等目的添加必要的字段
switch = true                               # NOTE: 数据装饰器开关
selector = 'postgresql'                     # CHANGED: 'text'/'postgresql' -- 数据装饰选择器
    [decorator.text]                        # 数据装饰器一
    filename = 'system_monitor_data.txt'    # CHANGED: 数据存储的文件名
    mode = 'add'                            # CHANGED: 'add'/'write' -- 文件写入模式，追加或覆写
    [decorator.postgresql]                  # 数据装饰器二
    schema = 'public'                       # CHANGED: 数据存储的Schema名
    table = 'example'                       # CHANGED: 数据存储的Table名


[log]                                       # 日志配置: 决定本程序日志格式和输出目标
console = true                              # CHANGED: 是否要将log输出到STDOUT，只在调试时有用，正式部署时需要关闭
console_level = 'DEBUG'                     # NOTE: 日志等级，可选值为'DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL'
file = true                                 # NOTE: 是否要将log输出到文件中
file_level = 'WARNING'                      # NOTE: 日志等级，可选值为'DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL'
log_file = 'logs/log.log'                   # NOTE: log文件存储路径
max_size = 10240000                         # NOTE: 单个log文件大小，单位KB
backup_count = 10                           # NOTE: 最大log文件数
format = '%(asctime)s | %(levelname)s | <%(threadName)s> %(module)s.%(funcName)s [%(lineno)d]: %(message)s'
